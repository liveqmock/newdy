<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapping.SysLogMapper" >
  <resultMap id="BaseResultMap" type="com.cz.model.SysLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="module" property="module" jdbcType="VARCHAR" />
    <result column="event" property="event" jdbcType="INTEGER" />
    <result column="operinfo" property="operinfo" jdbcType="VARCHAR" />
    <result column="userip" property="userip" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="opertime" property="opertime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, module, event, operinfo, userip, userId, username, opertime
  </sql>

  <select id="getSysLogById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteSysLog" parameterType="java.lang.Integer" >
    delete from sys_log
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="addSysLog" parameterType="com.cz.model.SysLog" >
    insert into sys_log (id, module, event, 
      operinfo, userip, userId, 
      username, opertime)
    values (#{id,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR}, #{event,jdbcType=INTEGER}, 
      #{operinfo,jdbcType=VARCHAR}, #{userip,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{opertime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cz.model.SysLog" >
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="event != null" >
        event,
      </if>
      <if test="operinfo != null" >
        operinfo,
      </if>
      <if test="userip != null" >
        userip,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="opertime != null" >
        opertime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="event != null" >
        #{event,jdbcType=INTEGER},
      </if>
      <if test="operinfo != null" >
        #{operinfo,jdbcType=VARCHAR},
      </if>
      <if test="userip != null" >
        #{userip,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="opertime != null" >
        #{opertime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateSysLog" parameterType="map" >
    update sys_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.module != null" >
        module = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.event != null" >
        event = #{record.event,jdbcType=INTEGER},
      </if>
      <if test="record.operinfo != null" >
        operinfo = #{record.operinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.userip != null" >
        userip = #{record.userip,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.opertime != null" >
        opertime = #{record.opertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_log
    set id = #{record.id,jdbcType=INTEGER},
      module = #{record.module,jdbcType=VARCHAR},
      event = #{record.event,jdbcType=INTEGER},
      operinfo = #{record.operinfo,jdbcType=VARCHAR},
      userip = #{record.userip,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      opertime = #{record.opertime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cz.model.SysLog" >
    update sys_log
    <set >
      <if test="module != null" >
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="event != null" >
        event = #{event,jdbcType=INTEGER},
      </if>
      <if test="operinfo != null" >
        operinfo = #{operinfo,jdbcType=VARCHAR},
      </if>
      <if test="userip != null" >
        userip = #{userip,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="opertime != null" >
        opertime = #{opertime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cz.model.SysLog" >
    update sys_log
    set module = #{module,jdbcType=VARCHAR},
      event = #{event,jdbcType=INTEGER},
      operinfo = #{operinfo,jdbcType=VARCHAR},
      userip = #{userip,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      opertime = #{opertime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>