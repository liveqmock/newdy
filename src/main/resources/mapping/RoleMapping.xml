<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cz.dao.RoleDao" >
  <resultMap id="BaseResultMap" type="com.cz.model.Role" >
    <id column="role_id" property="role_id" jdbcType="INTEGER" />
    <result column="role_name" property="role_name" jdbcType="VARCHAR" />
    <result column="role_desc" property="role_desc" jdbcType="VARCHAR" />
    <result column="role_function" property="role_function" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="edit_time" property="edit_time" jdbcType="TIMESTAMP" />
    <result column="editor" property="editor" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, role_name, role_desc, role_function, status, edit_time, editor
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{role_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where role_id = #{role_id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.cz.model.Role" >
    insert into role (role_id, role_name, role_desc, 
      role_function, status, edit_time, 
      editor)
    values (#{role_id,jdbcType=INTEGER}, #{role_name,jdbcType=VARCHAR}, #{role_desc,jdbcType=VARCHAR}, 
      #{role_function,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{edit_time,jdbcType=TIMESTAMP}, 
      #{editor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cz.model.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="role_id != null" >
        role_id,
      </if>
      <if test="role_name != null" >
        role_name,
      </if>
      <if test="role_desc != null" >
        role_desc,
      </if>
      <if test="role_function != null" >
        role_function,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="edit_time != null" >
        edit_time,
      </if>
      <if test="editor != null" >
        editor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="role_id != null" >
        #{role_id,jdbcType=INTEGER},
      </if>
      <if test="role_name != null" >
        #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="role_desc != null" >
        #{role_desc,jdbcType=VARCHAR},
      </if>
      <if test="role_function != null" >
        #{role_function,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="edit_time != null" >
        #{edit_time,jdbcType=TIMESTAMP},
      </if>
      <if test="editor != null" >
        #{editor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.cz.model.Role" >
    update role
    <set >
      <if test="role_name != null" >
        role_name = #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="role_desc != null" >
        role_desc = #{role_desc,jdbcType=VARCHAR},
      </if>
      <if test="role_function != null" >
        role_function = #{role_function,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="edit_time != null" >
        edit_time = #{edit_time,jdbcType=TIMESTAMP},
      </if>
      <if test="editor != null" >
        editor = #{editor,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{role_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cz.model.Role" >
    update role
    set role_name = #{role_name,jdbcType=VARCHAR},
      role_desc = #{role_desc,jdbcType=VARCHAR},
      role_function = #{role_function,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      edit_time = #{edit_time,jdbcType=TIMESTAMP},
      editor = #{editor,jdbcType=VARCHAR}
    where role_id = #{role_id,jdbcType=INTEGER}
  </update>
</mapper>