<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cz.dao.PayRecordsDao" >
  <resultMap id="BaseResultMap" type="com.cz.model.PayRecords" >
    <id column="pay_record_id" property="pay_record_id" jdbcType="INTEGER" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="pay_ip" property="pay_ip" jdbcType="VARCHAR" />
    <result column="pay_money" property="pay_money" jdbcType="INTEGER" />
    <result column="pay_status" property="pay_status" jdbcType="VARCHAR" />
    <result column="pay_date" property="pay_date" jdbcType="TIMESTAMP" />
    <result column="pay_order_no" property="pay_order_no" jdbcType="VARCHAR" />
    <result column="pay_serial_no" property="pay_serial_no" jdbcType="VARCHAR" />
    <result column="edit_time" property="edit_time" jdbcType="TIMESTAMP" />
    <result column="editor" property="editor" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pay_record_id, user_id, pay_ip, pay_money, pay_status, pay_date, pay_order_no, pay_serial_no, 
    edit_time, editor
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pay_records
    where pay_record_id = #{pay_record_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pay_records
    where pay_record_id = #{pay_record_id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.cz.model.PayRecords" >
    insert into pay_records (pay_record_id, user_id, pay_ip, 
      pay_money, pay_status, pay_date, 
      pay_order_no, pay_serial_no, edit_time, 
      editor)
    values (#{pay_record_id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{pay_ip,jdbcType=VARCHAR}, 
      #{pay_money,jdbcType=INTEGER}, #{pay_status,jdbcType=VARCHAR}, #{pay_date,jdbcType=TIMESTAMP}, 
      #{pay_order_no,jdbcType=VARCHAR}, #{pay_serial_no,jdbcType=VARCHAR}, #{edit_time,jdbcType=TIMESTAMP}, 
      #{editor,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cz.model.PayRecords" >
    insert into pay_records
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pay_record_id != null" >
        pay_record_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="pay_ip != null" >
        pay_ip,
      </if>
      <if test="pay_money != null" >
        pay_money,
      </if>
      <if test="pay_status != null" >
        pay_status,
      </if>
      <if test="pay_date != null" >
        pay_date,
      </if>
      <if test="pay_order_no != null" >
        pay_order_no,
      </if>
      <if test="pay_serial_no != null" >
        pay_serial_no,
      </if>
      <if test="edit_time != null" >
        edit_time,
      </if>
      <if test="editor != null" >
        editor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pay_record_id != null" >
        #{pay_record_id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="pay_ip != null" >
        #{pay_ip,jdbcType=VARCHAR},
      </if>
      <if test="pay_money != null" >
        #{pay_money,jdbcType=INTEGER},
      </if>
      <if test="pay_status != null" >
        #{pay_status,jdbcType=VARCHAR},
      </if>
      <if test="pay_date != null" >
        #{pay_date,jdbcType=TIMESTAMP},
      </if>
      <if test="pay_order_no != null" >
        #{pay_order_no,jdbcType=VARCHAR},
      </if>
      <if test="pay_serial_no != null" >
        #{pay_serial_no,jdbcType=VARCHAR},
      </if>
      <if test="edit_time != null" >
        #{edit_time,jdbcType=TIMESTAMP},
      </if>
      <if test="editor != null" >
        #{editor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cz.model.PayRecords" >
    update pay_records
    <set >
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="pay_ip != null" >
        pay_ip = #{pay_ip,jdbcType=VARCHAR},
      </if>
      <if test="pay_money != null" >
        pay_money = #{pay_money,jdbcType=INTEGER},
      </if>
      <if test="pay_status != null" >
        pay_status = #{pay_status,jdbcType=VARCHAR},
      </if>
      <if test="pay_date != null" >
        pay_date = #{pay_date,jdbcType=TIMESTAMP},
      </if>
      <if test="pay_order_no != null" >
        pay_order_no = #{pay_order_no,jdbcType=VARCHAR},
      </if>
      <if test="pay_serial_no != null" >
        pay_serial_no = #{pay_serial_no,jdbcType=VARCHAR},
      </if>
      <if test="edit_time != null" >
        edit_time = #{edit_time,jdbcType=TIMESTAMP},
      </if>
      <if test="editor != null" >
        editor = #{editor,jdbcType=VARCHAR},
      </if>
    </set>
    where pay_record_id = #{pay_record_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cz.model.PayRecords" >
    update pay_records
    set user_id = #{user_id,jdbcType=INTEGER},
      pay_ip = #{pay_ip,jdbcType=VARCHAR},
      pay_money = #{pay_money,jdbcType=INTEGER},
      pay_status = #{pay_status,jdbcType=VARCHAR},
      pay_date = #{pay_date,jdbcType=TIMESTAMP},
      pay_order_no = #{pay_order_no,jdbcType=VARCHAR},
      pay_serial_no = #{pay_serial_no,jdbcType=VARCHAR},
      edit_time = #{edit_time,jdbcType=TIMESTAMP},
      editor = #{editor,jdbcType=VARCHAR}
    where pay_record_id = #{pay_record_id,jdbcType=INTEGER}
  </update>
</mapper>